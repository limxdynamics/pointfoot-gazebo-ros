<launch>
    <!-- Pass the ROBOT_TYPE environment variable to ROS parameters -->
    <param name="robot_type" value="$(env ROBOT_TYPE)" />

    <rosparam file="$(find pointfoot_gazebo)/config/default_point_foot.yaml" command="load"/>

    <param name="robot_description" command="cat $(find robot_description)/pointfoot/$(env ROBOT_TYPE)/urdf/robot.urdf"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find pointfoot_gazebo)/worlds/empty_world.world"/>
        <arg name="paused" value="false"/>
    </include>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" clear_params="true"
          args="-param robot_description
          -urdf
          -z 0.82
          -model point_foot_robot" output="screen"/>

    <!-- Configure the joint state controller parameters in the ROS parameter server -->
    <rosparam>
        joint_state_controller:
            type: joint_state_controller/JointStateController
            publish_rate: 100
    </rosparam>

    <!-- Start the controller spawner to launch the joint state controller -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller"/>

    <!-- Start the robot state publisher to publish the robot's state information -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Start the joint state publisher to publish the robot's joint state information -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
</launch>
